{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport ListContext from '../List/ListContext';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemAvatarUtilityClass } from './listItemAvatarClasses';\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(styles.root || {}, _extends({}, styleProps.alignItems === 'flex-start' && styles.alignItemsFlexStart));\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    alignItems,\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\n\nconst ListItemAvatarRoot = experimentalStyled('div', {}, {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  minWidth: 56,\n  flexShrink: 0\n}, styleProps.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\"]);\n\n  const context = React.useContext(ListContext);\n\n  const styleProps = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/React.createElement(ListItemAvatarRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default ListItemAvatar;","map":{"version":3,"sources":["C:/Users/Blasus/Desktop/afpa/ecf/node_modules/@material-ui/core/ListItemAvatar/ListItemAvatar.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","deepmerge","unstable_composeClasses","composeClasses","ListContext","experimentalStyled","useThemeProps","getListItemAvatarUtilityClass","overridesResolver","props","styles","styleProps","root","alignItems","alignItemsFlexStart","useUtilityClasses","classes","slots","ListItemAvatarRoot","name","slot","minWidth","flexShrink","marginTop","ListItemAvatar","forwardRef","inProps","ref","className","other","context","useContext","createElement","process","env","NODE_ENV","propTypes","children","node","object","string","sx"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport ListContext from '../List/ListContext';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemAvatarUtilityClass } from './listItemAvatarClasses';\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(styles.root || {}, _extends({}, styleProps.alignItems === 'flex-start' && styles.alignItemsFlexStart));\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    alignItems,\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\n\nconst ListItemAvatarRoot = experimentalStyled('div', {}, {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  minWidth: 56,\n  flexShrink: 0\n}, styleProps.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\"]);\n\n  const context = React.useContext(ListContext);\n\n  const styleProps = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/React.createElement(ListItemAvatarRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default ListItemAvatar;"]},"metadata":{},"sourceType":"module"}