{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\n\nconst overridesResolver = (props, styles) => {\n  return deepmerge(styles.root || {}, {\n    [`& .${cardHeaderClasses.avatar}`]: styles.avatar,\n    [`& .${cardHeaderClasses.action}`]: styles.action,\n    [`& .${cardHeaderClasses.content}`]: styles.content,\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  });\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver\n})({\n  /* Styles applied to the root element. */\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Avatar'\n})({\n  /* Styles applied to the avatar element. */\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Action'\n})({\n  /* Styles applied to the action element. */\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Content'\n})({\n  /* Styles applied to the content wrapper element. */\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  const styleProps = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    styleProps: styleProps\n  }, other), avatar && /*#__PURE__*/React.createElement(CardHeaderAvatar, {\n    className: classes.avatar,\n    styleProps: styleProps\n  }, avatar), /*#__PURE__*/React.createElement(CardHeaderContent, {\n    className: classes.content,\n    styleProps: styleProps\n  }, title, subheader), action && /*#__PURE__*/React.createElement(CardHeaderAction, {\n    className: classes.action,\n    styleProps: styleProps\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","map":{"version":3,"sources":["C:/Users/Blasus/Desktop/afpa/ecf/node_modules/@material-ui/core/CardHeader/CardHeader.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","deepmerge","unstable_composeClasses","composeClasses","Typography","useThemeProps","experimentalStyled","cardHeaderClasses","getCardHeaderUtilityClass","overridesResolver","props","styles","root","avatar","action","content","title","subheader","useUtilityClasses","styleProps","classes","slots","CardHeaderRoot","name","slot","display","alignItems","padding","CardHeaderAvatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","CardHeader","forwardRef","inProps","ref","className","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","other","type","createElement","variant","color","as","process","env","NODE_ENV","propTypes","node","children","object","string","elementType","bool","sx"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\n\nconst overridesResolver = (props, styles) => {\n  return deepmerge(styles.root || {}, {\n    [`& .${cardHeaderClasses.avatar}`]: styles.avatar,\n    [`& .${cardHeaderClasses.action}`]: styles.action,\n    [`& .${cardHeaderClasses.content}`]: styles.content,\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  });\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver\n})({\n  /* Styles applied to the root element. */\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Avatar'\n})({\n  /* Styles applied to the avatar element. */\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Action'\n})({\n  /* Styles applied to the action element. */\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Content'\n})({\n  /* Styles applied to the content wrapper element. */\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  const styleProps = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    styleProps: styleProps\n  }, other), avatar && /*#__PURE__*/React.createElement(CardHeaderAvatar, {\n    className: classes.avatar,\n    styleProps: styleProps\n  }, avatar), /*#__PURE__*/React.createElement(CardHeaderContent, {\n    className: classes.content,\n    styleProps: styleProps\n  }, title, subheader), action && /*#__PURE__*/React.createElement(CardHeaderAction, {\n    className: classes.action,\n    styleProps: styleProps\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;"]},"metadata":{},"sourceType":"module"}