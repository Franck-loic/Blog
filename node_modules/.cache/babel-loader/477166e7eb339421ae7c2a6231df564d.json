{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getBottomNavigationUtilityClass } from './bottomNavigationClasses';\n\nconst overridesResolver = (props, styles) => styles.root || {};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getBottomNavigationUtilityClass, classes);\n};\n\nconst BottomNavigationRoot = experimentalStyled('div', {}, {\n  name: 'MuiBottomNavigation',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme\n}) => ({\n  /* Styles applied to the root element. */\n  display: 'flex',\n  justifyContent: 'center',\n  height: 56,\n  backgroundColor: theme.palette.background.paper\n}));\nconst BottomNavigation = /*#__PURE__*/React.forwardRef(function BottomNavigation(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBottomNavigation'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    onChange,\n    showLabels = false,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"component\", \"onChange\", \"showLabels\", \"value\"]);\n\n  const styleProps = _extends({}, props, {\n    component,\n    showLabels\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/React.createElement(BottomNavigationRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    styleProps: styleProps\n  }, other), React.Children.map(children, (child, childIndex) => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The BottomNavigation component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    const childValue = child.props.value === undefined ? childIndex : child.props.value;\n    return /*#__PURE__*/React.cloneElement(child, {\n      selected: childValue === value,\n      showLabel: child.props.showLabel !== undefined ? child.props.showLabel : showLabels,\n      value: childValue,\n      onChange\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BottomNavigation.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {any} value We default to the index of the child.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, all `BottomNavigationAction`s will show their labels.\n   * By default, only the selected `BottomNavigationAction` will show its label.\n   * @default false\n   */\n  showLabels: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the currently selected `BottomNavigationAction`.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default BottomNavigation;","map":{"version":3,"sources":["C:/Users/Blasus/Desktop/afpa/ecf/node_modules/@material-ui/core/BottomNavigation/BottomNavigation.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","isFragment","PropTypes","clsx","unstable_composeClasses","composeClasses","experimentalStyled","useThemeProps","getBottomNavigationUtilityClass","overridesResolver","props","styles","root","useUtilityClasses","styleProps","classes","slots","BottomNavigationRoot","name","slot","theme","display","justifyContent","height","backgroundColor","palette","background","paper","BottomNavigation","forwardRef","inProps","ref","children","className","component","onChange","showLabels","value","other","createElement","as","Children","map","child","childIndex","isValidElement","process","env","NODE_ENV","console","error","join","childValue","undefined","cloneElement","selected","showLabel","propTypes","node","object","string","elementType","func","bool","sx","any"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getBottomNavigationUtilityClass } from './bottomNavigationClasses';\n\nconst overridesResolver = (props, styles) => styles.root || {};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getBottomNavigationUtilityClass, classes);\n};\n\nconst BottomNavigationRoot = experimentalStyled('div', {}, {\n  name: 'MuiBottomNavigation',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme\n}) => ({\n  /* Styles applied to the root element. */\n  display: 'flex',\n  justifyContent: 'center',\n  height: 56,\n  backgroundColor: theme.palette.background.paper\n}));\nconst BottomNavigation = /*#__PURE__*/React.forwardRef(function BottomNavigation(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBottomNavigation'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    onChange,\n    showLabels = false,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"component\", \"onChange\", \"showLabels\", \"value\"]);\n\n  const styleProps = _extends({}, props, {\n    component,\n    showLabels\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/React.createElement(BottomNavigationRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    styleProps: styleProps\n  }, other), React.Children.map(children, (child, childIndex) => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The BottomNavigation component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    const childValue = child.props.value === undefined ? childIndex : child.props.value;\n    return /*#__PURE__*/React.cloneElement(child, {\n      selected: childValue === value,\n      showLabel: child.props.showLabel !== undefined ? child.props.showLabel : showLabels,\n      value: childValue,\n      onChange\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BottomNavigation.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {any} value We default to the index of the child.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, all `BottomNavigationAction`s will show their labels.\n   * By default, only the selected `BottomNavigationAction` will show its label.\n   * @default false\n   */\n  showLabels: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the currently selected `BottomNavigationAction`.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default BottomNavigation;"]},"metadata":{},"sourceType":"module"}