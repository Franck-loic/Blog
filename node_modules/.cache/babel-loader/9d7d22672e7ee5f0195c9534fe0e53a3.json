{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport bottomNavigationActionClasses, { getBottomNavigationActionUtilityClass } from './bottomNavigationActionClasses';\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(styles.root || {}, _extends({}, !styleProps.showLabel && !styleProps.selected && styles.iconOnly, {\n    [`& .${bottomNavigationActionClasses.wrapper}`]: styles.wrapper,\n    [`& .${bottomNavigationActionClasses.label}`]: styles.label\n  }));\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    showLabel,\n    selected\n  } = styleProps;\n  const slots = {\n    root: ['root', !showLabel && !selected && 'iconOnly', selected && 'selected'],\n    wrapper: ['wrapper'],\n    label: ['label', !showLabel && !selected && 'iconOnly', selected && 'selected']\n  };\n  return composeClasses(slots, getBottomNavigationActionUtilityClass, classes);\n};\n\nconst BottomNavigationActionRoot = experimentalStyled(ButtonBase, {}, {\n  name: 'MuiBottomNavigationAction',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  transition: theme.transitions.create(['color', 'padding-top'], {\n    duration: theme.transitions.duration.short\n  }),\n  padding: '6px 12px 8px',\n  minWidth: 80,\n  maxWidth: 168,\n  color: theme.palette.text.secondary,\n  flex: '1'\n}, !styleProps.showLabel && !styleProps.selected && {\n  paddingTop: 16\n}, {\n  [`&.${bottomNavigationActionClasses.selected}`]: {\n    paddingTop: 6,\n    color: theme.palette.primary.main\n  }\n}));\nconst BottomNavigationActionWrapper = experimentalStyled('span', {}, {\n  name: 'MuiBottomNavigationAction',\n  slot: 'Wrapper'\n})({\n  /* Styles applied to the span element that wraps the icon and label. */\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  width: '100%',\n  flexDirection: 'column'\n});\nconst BottomNavigationActionLabel = experimentalStyled('span', {}, {\n  name: 'MuiBottomNavigationAction',\n  slot: 'Label'\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the label's span element. */\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(12),\n  opacity: 1,\n  transition: 'font-size 0.2s, opacity 0.2s',\n  transitionDelay: '0.1s'\n}, !styleProps.showLabel && !styleProps.selected && {\n  opacity: 0,\n  transitionDelay: '0s'\n}, {\n  [`&.${bottomNavigationActionClasses.selected}`]: {\n    fontSize: theme.typography.pxToRem(14)\n  }\n}));\nconst BottomNavigationAction = /*#__PURE__*/React.forwardRef(function BottomNavigationAction(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBottomNavigationAction'\n  });\n\n  const {\n    className,\n    icon,\n    label,\n    onChange,\n    onTouchStart,\n    onTouchEnd,\n    onClick,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"icon\", \"label\", \"onChange\", \"onTouchStart\", \"onTouchEnd\", \"onClick\", \"selected\", \"showLabel\", \"value\"]); // TODO: convert to simple assignment after the type error in defaultPropsHandler.js:60:6 is fixed\n\n\n  const styleProps = _extends({}, props);\n\n  const classes = useUtilityClasses(styleProps);\n  const touchStartPos = React.useRef();\n  const touchTimer = React.useRef();\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(touchTimer.current);\n    };\n  }, [touchTimer]);\n\n  const handleTouchStart = event => {\n    if (onTouchStart) {\n      onTouchStart(event);\n    }\n\n    const {\n      clientX,\n      clientY\n    } = event.touches[0];\n    touchStartPos.current = {\n      clientX,\n      clientY\n    };\n  };\n\n  const handleTouchEnd = event => {\n    if (onTouchEnd) onTouchEnd(event);\n    const target = event.target;\n    const {\n      clientX,\n      clientY\n    } = event.changedTouches[0];\n\n    if (Math.abs(clientX - touchStartPos.current.clientX) < 10 && Math.abs(clientY - touchStartPos.current.clientY) < 10) {\n      touchTimer.current = setTimeout(() => {\n        // Simulate the native tap behavior on mobile.\n        // On the web, a tap won't trigger a click if a container is scrolling.\n        //\n        // Note that the synthetic behavior won't trigger a native <a> nor\n        // it will trigger a click at all on iOS.\n        target.dispatchEvent(new Event('click', {\n          bubbles: true\n        }));\n      }, 10);\n    }\n  };\n\n  const handleChange = event => {\n    clearTimeout(touchTimer.current);\n\n    if (onChange) {\n      onChange(event, value);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(BottomNavigationActionRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    focusRipple: true,\n    onClick: handleChange,\n    onTouchStart: handleTouchStart,\n    onTouchEnd: handleTouchEnd,\n    styleProps: styleProps\n  }, other), /*#__PURE__*/React.createElement(BottomNavigationActionWrapper, {\n    className: classes.wrapper,\n    styleProps: styleProps\n  }, icon, /*#__PURE__*/React.createElement(BottomNavigationActionLabel, {\n    className: classes.label,\n    styleProps: styleProps\n  }, label)));\n});\nprocess.env.NODE_ENV !== \"production\" ? BottomNavigationAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * If `true`, the `BottomNavigationAction` will show its label.\n   * By default, only the selected `BottomNavigationAction`\n   * inside `BottomNavigation` will show its label.\n   *\n   * The prop defaults to the value (`false`) inherited from the parent BottomNavigation component.\n   */\n  showLabel: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * You can provide your own value. Otherwise, we fallback to the child position index.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default BottomNavigationAction;","map":{"version":3,"sources":["C:/Users/Blasus/Desktop/afpa/ecf/node_modules/@material-ui/core/BottomNavigationAction/BottomNavigationAction.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","deepmerge","unstable_composeClasses","composeClasses","experimentalStyled","useThemeProps","ButtonBase","unsupportedProp","bottomNavigationActionClasses","getBottomNavigationActionUtilityClass","overridesResolver","props","styles","styleProps","root","showLabel","selected","iconOnly","wrapper","label","useUtilityClasses","classes","slots","BottomNavigationActionRoot","name","slot","theme","transition","transitions","create","duration","short","padding","minWidth","maxWidth","color","palette","text","secondary","flex","paddingTop","primary","main","BottomNavigationActionWrapper","display","alignItems","justifyContent","width","flexDirection","BottomNavigationActionLabel","fontFamily","typography","fontSize","pxToRem","opacity","transitionDelay","BottomNavigationAction","forwardRef","inProps","ref","className","icon","onChange","onTouchStart","onTouchEnd","onClick","value","other","touchStartPos","useRef","touchTimer","useEffect","clearTimeout","current","handleTouchStart","event","clientX","clientY","touches","handleTouchEnd","target","changedTouches","Math","abs","setTimeout","dispatchEvent","Event","bubbles","handleChange","createElement","focusRipple","process","env","NODE_ENV","propTypes","children","object","string","node","func","bool","sx","any"],"mappings":"AAAA,OAAOA,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,uBAAuB,IAAIC,cAApC,QAA0D,uBAA1D;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,6BAAP,IAAwCC,qCAAxC,QAAqF,iCAArF;;AAEA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,QAAM;AACJC,IAAAA;AADI,MAEFF,KAFJ;AAGA,SAAOV,SAAS,CAACW,MAAM,CAACE,IAAP,IAAe,EAAhB,EAAoBjB,QAAQ,CAAC,EAAD,EAAK,CAACgB,UAAU,CAACE,SAAZ,IAAyB,CAACF,UAAU,CAACG,QAArC,IAAiDJ,MAAM,CAACK,QAA7D,EAAuE;AACjH,KAAE,MAAKT,6BAA6B,CAACU,OAAQ,EAA7C,GAAiDN,MAAM,CAACM,OADyD;AAEjH,KAAE,MAAKV,6BAA6B,CAACW,KAAM,EAA3C,GAA+CP,MAAM,CAACO;AAF2D,GAAvE,CAA5B,CAAhB;AAID,CARD;;AAUA,MAAMC,iBAAiB,GAAGP,UAAU,IAAI;AACtC,QAAM;AACJQ,IAAAA,OADI;AAEJN,IAAAA,SAFI;AAGJC,IAAAA;AAHI,MAIFH,UAJJ;AAKA,QAAMS,KAAK,GAAG;AACZR,IAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,CAACC,SAAD,IAAc,CAACC,QAAf,IAA2B,UAApC,EAAgDA,QAAQ,IAAI,UAA5D,CADM;AAEZE,IAAAA,OAAO,EAAE,CAAC,SAAD,CAFG;AAGZC,IAAAA,KAAK,EAAE,CAAC,OAAD,EAAU,CAACJ,SAAD,IAAc,CAACC,QAAf,IAA2B,UAArC,EAAiDA,QAAQ,IAAI,UAA7D;AAHK,GAAd;AAKA,SAAOb,cAAc,CAACmB,KAAD,EAAQb,qCAAR,EAA+CY,OAA/C,CAArB;AACD,CAZD;;AAcA,MAAME,0BAA0B,GAAGnB,kBAAkB,CAACE,UAAD,EAAa,EAAb,EAAiB;AACpEkB,EAAAA,IAAI,EAAE,2BAD8D;AAEpEC,EAAAA,IAAI,EAAE,MAF8D;AAGpEf,EAAAA;AAHoE,CAAjB,CAAlB,CAIhC,CAAC;AACFgB,EAAAA,KADE;AAEFb,EAAAA;AAFE,CAAD,KAGGhB,QAAQ,CAAC;AACb;AACA8B,EAAAA,UAAU,EAAED,KAAK,CAACE,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,OAAD,EAAU,aAAV,CAAzB,EAAmD;AAC7DC,IAAAA,QAAQ,EAAEJ,KAAK,CAACE,WAAN,CAAkBE,QAAlB,CAA2BC;AADwB,GAAnD,CAFC;AAKbC,EAAAA,OAAO,EAAE,cALI;AAMbC,EAAAA,QAAQ,EAAE,EANG;AAObC,EAAAA,QAAQ,EAAE,GAPG;AAQbC,EAAAA,KAAK,EAAET,KAAK,CAACU,OAAN,CAAcC,IAAd,CAAmBC,SARb;AASbC,EAAAA,IAAI,EAAE;AATO,CAAD,EAUX,CAAC1B,UAAU,CAACE,SAAZ,IAAyB,CAACF,UAAU,CAACG,QAArC,IAAiD;AAClDwB,EAAAA,UAAU,EAAE;AADsC,CAVtC,EAYX;AACD,GAAE,KAAIhC,6BAA6B,CAACQ,QAAS,EAA7C,GAAiD;AAC/CwB,IAAAA,UAAU,EAAE,CADmC;AAE/CL,IAAAA,KAAK,EAAET,KAAK,CAACU,OAAN,CAAcK,OAAd,CAAsBC;AAFkB;AADhD,CAZW,CAPqB,CAAnC;AAyBA,MAAMC,6BAA6B,GAAGvC,kBAAkB,CAAC,MAAD,EAAS,EAAT,EAAa;AACnEoB,EAAAA,IAAI,EAAE,2BAD6D;AAEnEC,EAAAA,IAAI,EAAE;AAF6D,CAAb,CAAlB,CAGnC;AACD;AACAmB,EAAAA,OAAO,EAAE,aAFR;AAGDC,EAAAA,UAAU,EAAE,QAHX;AAIDC,EAAAA,cAAc,EAAE,QAJf;AAKDC,EAAAA,KAAK,EAAE,MALN;AAMDC,EAAAA,aAAa,EAAE;AANd,CAHmC,CAAtC;AAWA,MAAMC,2BAA2B,GAAG7C,kBAAkB,CAAC,MAAD,EAAS,EAAT,EAAa;AACjEoB,EAAAA,IAAI,EAAE,2BAD2D;AAEjEC,EAAAA,IAAI,EAAE;AAF2D,CAAb,CAAlB,CAGjC,CAAC;AACFC,EAAAA,KADE;AAEFb,EAAAA;AAFE,CAAD,KAGGhB,QAAQ,CAAC;AACb;AACAqD,EAAAA,UAAU,EAAExB,KAAK,CAACyB,UAAN,CAAiBD,UAFhB;AAGbE,EAAAA,QAAQ,EAAE1B,KAAK,CAACyB,UAAN,CAAiBE,OAAjB,CAAyB,EAAzB,CAHG;AAIbC,EAAAA,OAAO,EAAE,CAJI;AAKb3B,EAAAA,UAAU,EAAE,8BALC;AAMb4B,EAAAA,eAAe,EAAE;AANJ,CAAD,EAOX,CAAC1C,UAAU,CAACE,SAAZ,IAAyB,CAACF,UAAU,CAACG,QAArC,IAAiD;AAClDsC,EAAAA,OAAO,EAAE,CADyC;AAElDC,EAAAA,eAAe,EAAE;AAFiC,CAPtC,EAUX;AACD,GAAE,KAAI/C,6BAA6B,CAACQ,QAAS,EAA7C,GAAiD;AAC/CoC,IAAAA,QAAQ,EAAE1B,KAAK,CAACyB,UAAN,CAAiBE,OAAjB,CAAyB,EAAzB;AADqC;AADhD,CAVW,CANsB,CAApC;AAqBA,MAAMG,sBAAsB,GAAG,aAAa1D,KAAK,CAAC2D,UAAN,CAAiB,SAASD,sBAAT,CAAgCE,OAAhC,EAAyCC,GAAzC,EAA8C;AACzG,QAAMhD,KAAK,GAAGN,aAAa,CAAC;AAC1BM,IAAAA,KAAK,EAAE+C,OADmB;AAE1BlC,IAAAA,IAAI,EAAE;AAFoB,GAAD,CAA3B;;AAKA,QAAM;AACJoC,IAAAA,SADI;AAEJC,IAAAA,IAFI;AAGJ1C,IAAAA,KAHI;AAIJ2C,IAAAA,QAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA,UANI;AAOJC,IAAAA,OAPI;AAQJC,IAAAA;AARI,MASFvD,KATJ;AAAA,QAUMwD,KAAK,GAAGvE,6BAA6B,CAACe,KAAD,EAAQ,CAAC,WAAD,EAAc,MAAd,EAAsB,OAAtB,EAA+B,UAA/B,EAA2C,cAA3C,EAA2D,YAA3D,EAAyE,SAAzE,EAAoF,UAApF,EAAgG,WAAhG,EAA6G,OAA7G,CAAR,CAV3C,CANyG,CAgBkE;;;AAG3K,QAAME,UAAU,GAAGhB,QAAQ,CAAC,EAAD,EAAKc,KAAL,CAA3B;;AAEA,QAAMU,OAAO,GAAGD,iBAAiB,CAACP,UAAD,CAAjC;AACA,QAAMuD,aAAa,GAAGtE,KAAK,CAACuE,MAAN,EAAtB;AACA,QAAMC,UAAU,GAAGxE,KAAK,CAACuE,MAAN,EAAnB;AACAvE,EAAAA,KAAK,CAACyE,SAAN,CAAgB,MAAM;AACpB,WAAO,MAAM;AACXC,MAAAA,YAAY,CAACF,UAAU,CAACG,OAAZ,CAAZ;AACD,KAFD;AAGD,GAJD,EAIG,CAACH,UAAD,CAJH;;AAMA,QAAMI,gBAAgB,GAAGC,KAAK,IAAI;AAChC,QAAIZ,YAAJ,EAAkB;AAChBA,MAAAA,YAAY,CAACY,KAAD,CAAZ;AACD;;AAED,UAAM;AACJC,MAAAA,OADI;AAEJC,MAAAA;AAFI,QAGFF,KAAK,CAACG,OAAN,CAAc,CAAd,CAHJ;AAIAV,IAAAA,aAAa,CAACK,OAAd,GAAwB;AACtBG,MAAAA,OADsB;AAEtBC,MAAAA;AAFsB,KAAxB;AAID,GAbD;;AAeA,QAAME,cAAc,GAAGJ,KAAK,IAAI;AAC9B,QAAIX,UAAJ,EAAgBA,UAAU,CAACW,KAAD,CAAV;AAChB,UAAMK,MAAM,GAAGL,KAAK,CAACK,MAArB;AACA,UAAM;AACJJ,MAAAA,OADI;AAEJC,MAAAA;AAFI,QAGFF,KAAK,CAACM,cAAN,CAAqB,CAArB,CAHJ;;AAKA,QAAIC,IAAI,CAACC,GAAL,CAASP,OAAO,GAAGR,aAAa,CAACK,OAAd,CAAsBG,OAAzC,IAAoD,EAApD,IAA0DM,IAAI,CAACC,GAAL,CAASN,OAAO,GAAGT,aAAa,CAACK,OAAd,CAAsBI,OAAzC,IAAoD,EAAlH,EAAsH;AACpHP,MAAAA,UAAU,CAACG,OAAX,GAAqBW,UAAU,CAAC,MAAM;AACpC;AACA;AACA;AACA;AACA;AACAJ,QAAAA,MAAM,CAACK,aAAP,CAAqB,IAAIC,KAAJ,CAAU,OAAV,EAAmB;AACtCC,UAAAA,OAAO,EAAE;AAD6B,SAAnB,CAArB;AAGD,OAT8B,EAS5B,EAT4B,CAA/B;AAUD;AACF,GApBD;;AAsBA,QAAMC,YAAY,GAAGb,KAAK,IAAI;AAC5BH,IAAAA,YAAY,CAACF,UAAU,CAACG,OAAZ,CAAZ;;AAEA,QAAIX,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACa,KAAD,EAAQT,KAAR,CAAR;AACD;;AAED,QAAID,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACU,KAAD,CAAP;AACD;AACF,GAVD;;AAYA,SAAO,aAAa7E,KAAK,CAAC2F,aAAN,CAAoBlE,0BAApB,EAAgD1B,QAAQ,CAAC;AAC3E8D,IAAAA,GAAG,EAAEA,GADsE;AAE3EC,IAAAA,SAAS,EAAE5D,IAAI,CAACqB,OAAO,CAACP,IAAT,EAAe8C,SAAf,CAF4D;AAG3E8B,IAAAA,WAAW,EAAE,IAH8D;AAI3EzB,IAAAA,OAAO,EAAEuB,YAJkE;AAK3EzB,IAAAA,YAAY,EAAEW,gBAL6D;AAM3EV,IAAAA,UAAU,EAAEe,cAN+D;AAO3ElE,IAAAA,UAAU,EAAEA;AAP+D,GAAD,EAQzEsD,KARyE,CAAxD,EAQT,aAAarE,KAAK,CAAC2F,aAAN,CAAoB9C,6BAApB,EAAmD;AACzEiB,IAAAA,SAAS,EAAEvC,OAAO,CAACH,OADsD;AAEzEL,IAAAA,UAAU,EAAEA;AAF6D,GAAnD,EAGrBgD,IAHqB,EAGf,aAAa/D,KAAK,CAAC2F,aAAN,CAAoBxC,2BAApB,EAAiD;AACrEW,IAAAA,SAAS,EAAEvC,OAAO,CAACF,KADkD;AAErEN,IAAAA,UAAU,EAAEA;AAFyD,GAAjD,EAGnBM,KAHmB,CAHE,CARJ,CAApB;AAeD,CA9F2C,CAA5C;AA+FAwE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCrC,sBAAsB,CAACsC,SAAvB,GAAmC;AACzE;AACA;AACA;AACA;;AAEA;AACF;AACA;AACA;AACEC,EAAAA,QAAQ,EAAExF,eAV+D;;AAYzE;AACF;AACA;AACEc,EAAAA,OAAO,EAAEtB,SAAS,CAACiG,MAfsD;;AAiBzE;AACF;AACA;AACEpC,EAAAA,SAAS,EAAE7D,SAAS,CAACkG,MApBoD;;AAsBzE;AACF;AACA;AACEpC,EAAAA,IAAI,EAAE9D,SAAS,CAACmG,IAzByD;;AA2BzE;AACF;AACA;AACE/E,EAAAA,KAAK,EAAEpB,SAAS,CAACmG,IA9BwD;;AAgCzE;AACF;AACA;AACEpC,EAAAA,QAAQ,EAAE/D,SAAS,CAACoG,IAnCqD;;AAqCzE;AACF;AACA;AACElC,EAAAA,OAAO,EAAElE,SAAS,CAACoG,IAxCsD;;AA0CzE;AACF;AACA;AACEnC,EAAAA,UAAU,EAAEjE,SAAS,CAACoG,IA7CmD;;AA+CzE;AACF;AACA;AACEpC,EAAAA,YAAY,EAAEhE,SAAS,CAACoG,IAlDiD;;AAoDzE;AACF;AACA;AACA;AACA;AACA;AACA;AACEpF,EAAAA,SAAS,EAAEhB,SAAS,CAACqG,IA3DoD;;AA6DzE;AACF;AACA;AACEC,EAAAA,EAAE,EAAEtG,SAAS,CAACiG,MAhE2D;;AAkEzE;AACF;AACA;AACE9B,EAAAA,KAAK,EAAEnE,SAAS,CAACuG;AArEwD,CAA3E,GAsEI,KAAK,CAtET;AAuEA,eAAe9C,sBAAf","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport bottomNavigationActionClasses, { getBottomNavigationActionUtilityClass } from './bottomNavigationActionClasses';\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(styles.root || {}, _extends({}, !styleProps.showLabel && !styleProps.selected && styles.iconOnly, {\n    [`& .${bottomNavigationActionClasses.wrapper}`]: styles.wrapper,\n    [`& .${bottomNavigationActionClasses.label}`]: styles.label\n  }));\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    showLabel,\n    selected\n  } = styleProps;\n  const slots = {\n    root: ['root', !showLabel && !selected && 'iconOnly', selected && 'selected'],\n    wrapper: ['wrapper'],\n    label: ['label', !showLabel && !selected && 'iconOnly', selected && 'selected']\n  };\n  return composeClasses(slots, getBottomNavigationActionUtilityClass, classes);\n};\n\nconst BottomNavigationActionRoot = experimentalStyled(ButtonBase, {}, {\n  name: 'MuiBottomNavigationAction',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  transition: theme.transitions.create(['color', 'padding-top'], {\n    duration: theme.transitions.duration.short\n  }),\n  padding: '6px 12px 8px',\n  minWidth: 80,\n  maxWidth: 168,\n  color: theme.palette.text.secondary,\n  flex: '1'\n}, !styleProps.showLabel && !styleProps.selected && {\n  paddingTop: 16\n}, {\n  [`&.${bottomNavigationActionClasses.selected}`]: {\n    paddingTop: 6,\n    color: theme.palette.primary.main\n  }\n}));\nconst BottomNavigationActionWrapper = experimentalStyled('span', {}, {\n  name: 'MuiBottomNavigationAction',\n  slot: 'Wrapper'\n})({\n  /* Styles applied to the span element that wraps the icon and label. */\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  width: '100%',\n  flexDirection: 'column'\n});\nconst BottomNavigationActionLabel = experimentalStyled('span', {}, {\n  name: 'MuiBottomNavigationAction',\n  slot: 'Label'\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the label's span element. */\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(12),\n  opacity: 1,\n  transition: 'font-size 0.2s, opacity 0.2s',\n  transitionDelay: '0.1s'\n}, !styleProps.showLabel && !styleProps.selected && {\n  opacity: 0,\n  transitionDelay: '0s'\n}, {\n  [`&.${bottomNavigationActionClasses.selected}`]: {\n    fontSize: theme.typography.pxToRem(14)\n  }\n}));\nconst BottomNavigationAction = /*#__PURE__*/React.forwardRef(function BottomNavigationAction(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBottomNavigationAction'\n  });\n\n  const {\n    className,\n    icon,\n    label,\n    onChange,\n    onTouchStart,\n    onTouchEnd,\n    onClick,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"icon\", \"label\", \"onChange\", \"onTouchStart\", \"onTouchEnd\", \"onClick\", \"selected\", \"showLabel\", \"value\"]); // TODO: convert to simple assignment after the type error in defaultPropsHandler.js:60:6 is fixed\n\n\n  const styleProps = _extends({}, props);\n\n  const classes = useUtilityClasses(styleProps);\n  const touchStartPos = React.useRef();\n  const touchTimer = React.useRef();\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(touchTimer.current);\n    };\n  }, [touchTimer]);\n\n  const handleTouchStart = event => {\n    if (onTouchStart) {\n      onTouchStart(event);\n    }\n\n    const {\n      clientX,\n      clientY\n    } = event.touches[0];\n    touchStartPos.current = {\n      clientX,\n      clientY\n    };\n  };\n\n  const handleTouchEnd = event => {\n    if (onTouchEnd) onTouchEnd(event);\n    const target = event.target;\n    const {\n      clientX,\n      clientY\n    } = event.changedTouches[0];\n\n    if (Math.abs(clientX - touchStartPos.current.clientX) < 10 && Math.abs(clientY - touchStartPos.current.clientY) < 10) {\n      touchTimer.current = setTimeout(() => {\n        // Simulate the native tap behavior on mobile.\n        // On the web, a tap won't trigger a click if a container is scrolling.\n        //\n        // Note that the synthetic behavior won't trigger a native <a> nor\n        // it will trigger a click at all on iOS.\n        target.dispatchEvent(new Event('click', {\n          bubbles: true\n        }));\n      }, 10);\n    }\n  };\n\n  const handleChange = event => {\n    clearTimeout(touchTimer.current);\n\n    if (onChange) {\n      onChange(event, value);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(BottomNavigationActionRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    focusRipple: true,\n    onClick: handleChange,\n    onTouchStart: handleTouchStart,\n    onTouchEnd: handleTouchEnd,\n    styleProps: styleProps\n  }, other), /*#__PURE__*/React.createElement(BottomNavigationActionWrapper, {\n    className: classes.wrapper,\n    styleProps: styleProps\n  }, icon, /*#__PURE__*/React.createElement(BottomNavigationActionLabel, {\n    className: classes.label,\n    styleProps: styleProps\n  }, label)));\n});\nprocess.env.NODE_ENV !== \"production\" ? BottomNavigationAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * If `true`, the `BottomNavigationAction` will show its label.\n   * By default, only the selected `BottomNavigationAction`\n   * inside `BottomNavigation` will show its label.\n   *\n   * The prop defaults to the value (`false`) inherited from the parent BottomNavigation component.\n   */\n  showLabel: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * You can provide your own value. Otherwise, we fallback to the child position index.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default BottomNavigationAction;"]},"metadata":{},"sourceType":"module"}