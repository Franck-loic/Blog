{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, chainPropTypes } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport AccordionContext from './AccordionContext';\nimport useControlled from '../utils/useControlled';\nimport accordionClasses, { getAccordionUtilityClass } from './accordionClasses';\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(styles.root || {}, _extends({}, !styleProps.square && styles.rounded, !styleProps.disableGutters && styles.gutters, {\n    [`& .${accordionClasses.region}`]: styles.region\n  }));\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    square,\n    expanded,\n    disabled,\n    disableGutters\n  } = styleProps;\n  const slots = {\n    root: ['root', !square && 'rounded', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    region: ['region']\n  };\n  return composeClasses(slots, getAccordionUtilityClass, classes);\n};\n\nconst AccordionRoot = experimentalStyled(Paper, {}, {\n  name: 'MuiAccordion',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    position: 'relative',\n    transition: theme.transitions.create(['margin'], transition),\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    '&:before': {\n      position: 'absolute',\n      left: 0,\n      top: -1,\n      right: 0,\n      height: 1,\n      content: '\"\"',\n      opacity: 1,\n      backgroundColor: theme.palette.divider,\n      transition: theme.transitions.create(['opacity', 'background-color'], transition)\n    },\n    '&:first-of-type': {\n      '&:before': {\n        display: 'none'\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    [`&.${accordionClasses.expanded}`]: {\n      '&:before': {\n        opacity: 0\n      },\n      '&:first-of-type': {\n        marginTop: 0\n      },\n      '&:last-of-type': {\n        marginBottom: 0\n      },\n      '& + &': {\n        '&:before': {\n          display: 'none'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    [`&.${accordionClasses.disabled}`]: {\n      backgroundColor: theme.palette.action.disabledBackground\n    }\n  };\n}, ({\n  theme,\n  styleProps\n}) => _extends({}, !styleProps.square && {\n  borderRadius: 0,\n  '&:first-of-type': {\n    borderTopLeftRadius: theme.shape.borderRadius,\n    borderTopRightRadius: theme.shape.borderRadius\n  },\n  '&:last-of-type': {\n    borderBottomLeftRadius: theme.shape.borderRadius,\n    borderBottomRightRadius: theme.shape.borderRadius,\n    // Fix a rendering issue on Edge\n    '@supports (-ms-ime-align: auto)': {\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    }\n  }\n}, !styleProps.disableGutters && {\n  [`&.${accordionClasses.expanded}`]: {\n    margin: '16px 0'\n  }\n}));\nconst Accordion = /*#__PURE__*/React.forwardRef(function Accordion(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordion'\n  });\n\n  const {\n    children: childrenProp,\n    className,\n    defaultExpanded = false,\n    disabled = false,\n    disableGutters = false,\n    expanded: expandedProp,\n    onChange,\n    square = false,\n    TransitionComponent = Collapse,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"defaultExpanded\", \"disabled\", \"disableGutters\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  const [expanded, setExpandedState] = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  });\n  const handleChange = React.useCallback(event => {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n  const [summary, ...children] = React.Children.toArray(childrenProp);\n  const contextValue = React.useMemo(() => ({\n    expanded,\n    disabled,\n    disableGutters,\n    toggle: handleChange\n  }), [expanded, disabled, disableGutters, handleChange]);\n\n  const styleProps = _extends({}, props, {\n    square,\n    disabled,\n    disableGutters,\n    expanded\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/React.createElement(AccordionRoot, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    styleProps: styleProps,\n    square: square\n  }, other), /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: contextValue\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\",\n    className: classes.region\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, props => {\n    const summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('Material-UI: Expected the first child of Accordion to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the accordion by default.\n   * @default false\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, it removes the margin between two expanded accordion items and the increase of height.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Collapse\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Accordion;","map":{"version":3,"sources":["C:/Users/Blasus/Desktop/afpa/ecf/node_modules/@material-ui/core/Accordion/Accordion.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","isFragment","PropTypes","clsx","deepmerge","chainPropTypes","unstable_composeClasses","composeClasses","experimentalStyled","useThemeProps","Collapse","Paper","AccordionContext","useControlled","accordionClasses","getAccordionUtilityClass","overridesResolver","props","styles","styleProps","root","square","rounded","disableGutters","gutters","region","useUtilityClasses","classes","expanded","disabled","slots","AccordionRoot","name","slot","theme","transition","duration","transitions","shortest","position","create","overflowAnchor","left","top","right","height","content","opacity","backgroundColor","palette","divider","display","marginTop","marginBottom","action","disabledBackground","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","margin","Accordion","forwardRef","inProps","ref","children","childrenProp","className","defaultExpanded","expandedProp","onChange","TransitionComponent","TransitionProps","other","setExpandedState","controlled","default","state","handleChange","useCallback","event","summary","Children","toArray","contextValue","useMemo","toggle","createElement","Provider","value","in","timeout","id","role","process","env","NODE_ENV","propTypes","node","isRequired","Error","isValidElement","object","string","bool","func","sx","elementType"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, chainPropTypes } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport AccordionContext from './AccordionContext';\nimport useControlled from '../utils/useControlled';\nimport accordionClasses, { getAccordionUtilityClass } from './accordionClasses';\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(styles.root || {}, _extends({}, !styleProps.square && styles.rounded, !styleProps.disableGutters && styles.gutters, {\n    [`& .${accordionClasses.region}`]: styles.region\n  }));\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    square,\n    expanded,\n    disabled,\n    disableGutters\n  } = styleProps;\n  const slots = {\n    root: ['root', !square && 'rounded', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    region: ['region']\n  };\n  return composeClasses(slots, getAccordionUtilityClass, classes);\n};\n\nconst AccordionRoot = experimentalStyled(Paper, {}, {\n  name: 'MuiAccordion',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    position: 'relative',\n    transition: theme.transitions.create(['margin'], transition),\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    '&:before': {\n      position: 'absolute',\n      left: 0,\n      top: -1,\n      right: 0,\n      height: 1,\n      content: '\"\"',\n      opacity: 1,\n      backgroundColor: theme.palette.divider,\n      transition: theme.transitions.create(['opacity', 'background-color'], transition)\n    },\n    '&:first-of-type': {\n      '&:before': {\n        display: 'none'\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    [`&.${accordionClasses.expanded}`]: {\n      '&:before': {\n        opacity: 0\n      },\n      '&:first-of-type': {\n        marginTop: 0\n      },\n      '&:last-of-type': {\n        marginBottom: 0\n      },\n      '& + &': {\n        '&:before': {\n          display: 'none'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    [`&.${accordionClasses.disabled}`]: {\n      backgroundColor: theme.palette.action.disabledBackground\n    }\n  };\n}, ({\n  theme,\n  styleProps\n}) => _extends({}, !styleProps.square && {\n  borderRadius: 0,\n  '&:first-of-type': {\n    borderTopLeftRadius: theme.shape.borderRadius,\n    borderTopRightRadius: theme.shape.borderRadius\n  },\n  '&:last-of-type': {\n    borderBottomLeftRadius: theme.shape.borderRadius,\n    borderBottomRightRadius: theme.shape.borderRadius,\n    // Fix a rendering issue on Edge\n    '@supports (-ms-ime-align: auto)': {\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    }\n  }\n}, !styleProps.disableGutters && {\n  [`&.${accordionClasses.expanded}`]: {\n    margin: '16px 0'\n  }\n}));\nconst Accordion = /*#__PURE__*/React.forwardRef(function Accordion(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordion'\n  });\n\n  const {\n    children: childrenProp,\n    className,\n    defaultExpanded = false,\n    disabled = false,\n    disableGutters = false,\n    expanded: expandedProp,\n    onChange,\n    square = false,\n    TransitionComponent = Collapse,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"defaultExpanded\", \"disabled\", \"disableGutters\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  const [expanded, setExpandedState] = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  });\n  const handleChange = React.useCallback(event => {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n  const [summary, ...children] = React.Children.toArray(childrenProp);\n  const contextValue = React.useMemo(() => ({\n    expanded,\n    disabled,\n    disableGutters,\n    toggle: handleChange\n  }), [expanded, disabled, disableGutters, handleChange]);\n\n  const styleProps = _extends({}, props, {\n    square,\n    disabled,\n    disableGutters,\n    expanded\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/React.createElement(AccordionRoot, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    styleProps: styleProps,\n    square: square\n  }, other), /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: contextValue\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\",\n    className: classes.region\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, props => {\n    const summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('Material-UI: Expected the first child of Accordion to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the accordion by default.\n   * @default false\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, it removes the margin between two expanded accordion items and the increase of height.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Collapse\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Accordion;"]},"metadata":{},"sourceType":"module"}